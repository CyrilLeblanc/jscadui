{
  "version": 3,
  "sources": ["../../../packages/html-gizmo/index.js", "../../../node_modules/gl-matrix/esm/common.js", "../../../node_modules/gl-matrix/esm/vec3.js", "../../../packages/orbit/src/calcBetween.js", "../../../packages/orbit/src/fromXZRotation.js", "../../../packages/orbit/src/calcCamPos.js", "../../../packages/orbit/src/camRotation.js", "../../../packages/orbit/src/OrbitState.js", "../../../packages/orbit/src/commonCamera.js", "../../../packages/orbit/src/normalizeAngle.js", "../../../packages/orbit/src/OrbitControl.js", "../../../packages/postmessage/index.js", "../../../packages/scene/src/makeGrid.js", "../../../packages/scene/src/makeAxes.js", "../../../packages/themes/themes/light.ts", "../../../packages/params-form/src/params.js", "../../../packages/format-threejs/index.js", "../../../packages/render-threejs/index.js", "../src/observeResize.js", "../src/testThree.js", "../main.js"],
  "sourcesContent": ["// @ts-nocheck\r\nimport style from './gizmo.css.txt?raw'\r\n\r\nexport const names = {\r\n  T: 'TOP',\r\n  B: 'BOTTOM',\r\n  S: 'FRONT',\r\n  N: 'BACK',\r\n  W: 'LEFT',\r\n  E: 'RIGHT',\r\n}\r\n\r\nconst makeSide = (names, name, ...parts) => {\r\n  const out = [`<div part=\"face\" class=\"cube__face cube__face--${name}\"><div class=\"bg\" part=\"face-bg\"></div>`]\r\n  parts.forEach(p => p.split(',').forEach(c => out.push(`<i c=\"${c}\">${names[c] || ''}</i>`)))\r\n  out.push('</div>')\r\n  return out.join('')\r\n}\r\n\r\n/** \r\n * If using in HTML as tag <jscadui-gizmo/> you must call the static method Gizmo.define().\r\n * \r\n * If creating from code via new Gizmo() static initializer will be triggered automatically.\r\n * \r\n */\r\nexport class Gizmo extends HTMLElement {\r\n  static {\r\n    // auto define\r\n    customElements.define('jscadui-gizmo', this)\r\n  }\r\n  /** Empty method that can be called to trigger static initializer, that will then\r\n   * trigger customElements.define('jscadui-gizmo', this)\r\n   */\r\n  static define() {}\r\n  #root\r\n  #first\r\n  names\r\n  \r\n  constructor(_names=names){\r\n    super()\r\n    this.names = _names\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.#root = this.attachShadow({ mode: 'open' })\r\n    this.#root.innerHTML = `<div class=\"cube\"></div><style>${style}</style>`\r\n\r\n    const first = this.#first = this.#root.firstElementChild\r\n\r\n    this.setNames(this.names)\r\n\r\n    first.addEventListener('click', (e) => {\r\n      const cam = e.target.getAttribute('c')\r\n      if (cam) this.oncam?.({ cam })\r\n    })\r\n\r\n    const mouseover = (el, over) => {\r\n      const cam = el.getAttribute('c')\r\n      if (cam) {\r\n        // select all camera links for the same camera (highlight corners)\r\n        const all = first.querySelectorAll(`[c=\"${cam}\"]`)\r\n        all.forEach((el) => {\r\n          // toggle hover class\r\n          if (over) el.classList.add('hover')\r\n          else el.classList.remove('hover')\r\n        })\r\n      }\r\n    }\r\n\r\n    first.addEventListener('pointerover', (e) => mouseover(e.target, true))\r\n    first.addEventListener('pointerout', (e) => mouseover(e.target, false))\r\n    first.addEventListener('dragstart', (e) => e.preventDefault())\r\n  }\r\n\r\n  setNames(_names=names){\r\n    this.#first.innerHTML =\r\n      makeSide(_names, 'T', 'TNW,TN,TNE', 'TW,T,TE', 'TSW,TS,TSE') +\r\n      makeSide(_names, 'B', 'BSW,BS,BSE', 'BW,B,BE', 'BNW,BN,BNE') +\r\n      makeSide(_names, 'S', 'TSW,TS,TSE', 'SW,S,SE', 'BSW,BS,BSE') +\r\n      makeSide(_names, 'N', 'TNE,TN,TNW', 'NE,N,NW', 'BNE,BN,BNW') +\r\n      makeSide(_names, 'E', 'TSE,TE,TNE', 'SE,E,NE', 'BSE,BE,BNE') +\r\n      makeSide(_names, 'W', 'TNW,TW,TSW', 'NW,W,SW', 'BNW,BW,BSW')\r\n  }\r\n\r\n  setSize(size) {\r\n    this.style.setProperty('--cube-size', size + 'px')\r\n  }\r\n\r\n  rotateXZ(rx, rz) {\r\n    if(typeof rx === 'number') rx = rx+'rad'\r\n    if(typeof rz === 'number') rz = rz+'rad'\r\n    this.style.setProperty('--cube-transform', `scale3d(0.8,0.8,0.8) rotateX(${rx}) rotateZ(${rz})`)\r\n  }\r\n}\r\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "export const calcBetween = (a, b, p) => a + (b - a) * p\r\n", "/** Produce directly a 4x4 matrix theat does the rotation based on the rotation angles provided for X and Z\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rx - rotation on X axis\r\n * @param {Number} rz  - rotation on Z axis\r\n * @returns {mat4}\r\n */\r\nexport const fromXZRotation = (rx, rz) => {\r\n  var zs = Math.sin(rz)\r\n  var zc = Math.cos(rz)\r\n  var xs = Math.sin(rx)\r\n  var xc = Math.cos(rx)\r\n  return [zc, zs, 0, 0, -zs * xc, zc * xc, xs, 0, -zs * -xs, zc * -xs, xc, 0, 0, 0, 0, 1]\r\n  /*  var out = []\r\n  out[0] = zc\r\n  out[1] = zs\r\n  out[2] = 0\r\n  out[3] = 0\r\n  out[4] = -zs * xc\r\n  out[5] = zc * xc\r\n  out[6] = xs\r\n  out[7] = 0\r\n  out[8] = -zs * -xs\r\n  out[9] = zc * -xs\r\n  out[10] = xc\r\n  out[11] = 0\r\n  out[12] = 0\r\n  out[13] = 0\r\n  out[14] = 0\r\n  out[15] = 1\r\n  return out*/\r\n}\r\n", "import * as vec3 from 'gl-matrix/esm/vec3.js'\r\n\r\nimport { OrbitState } from './OrbitState'\r\nimport { fromXZRotation } from './fromXZRotation'\r\n\r\n/**\r\n *\r\n * @param {OrbitState} options\r\n * @returns\r\n */\r\nexport const calcCamPos = ({ target, len = 1, rz = 0, rx = 0 }) => {\r\n  const out = vec3.transformMat4([], [0, 0, len], fromXZRotation(rx, rz))\r\n  return target ? vec3.add([], out, target) : out\r\n}\r\n", "import * as vec3 from 'gl-matrix/esm/vec3.js'\r\n\r\nconst { hypot, acos } = Math\r\n\r\nexport const camRotation = (out, position, target) => {\r\n  let vec = vec3.subtract([], position, target)\r\n  const [x, y, z] = vec\r\n  let len = Math.hypot(x, y, z)\r\n  let lenXY = hypot(x, y)\r\n  let rz = lenXY == 0 ? 0 : acos(x / lenXY)\r\n  let rx = lenXY == 0 ? 0 : acos(lenXY / len)\r\n  if (z < 0) rx *= -1 // negative side is lost during sqr/sqrt hypot\r\n  // my brain does not work right now, so I can not explain why it works with y>0 instead y<0\r\n  // maybe one day I will realize, for now, who cares, it works\r\n  if (y > 0) rz *= -1 // negative side is lost during sqr/sqrt hypot\r\n  out.target = target\r\n  out.position = position\r\n  out.rx = rx\r\n  out.rz = rz\r\n  out.len = len\r\n  return out\r\n}\r\n", "import * as vec3 from 'gl-matrix/esm/vec3.js'\r\n\r\nimport { calcBetween } from './calcBetween.js'\r\nimport { calcCamPos } from './calcCamPos.js'\r\nimport { camRotation } from './camRotation.js'\r\nimport { fromXZRotation } from './fromXZRotation.js'\r\n\r\nconst { PI } = Math\r\n\r\n/** Orbit state can be created in 2 ways\r\n *\r\n * 1) {target, rx, rz, len}\r\n * 2) {target, position}\r\n *\r\n *\r\n */\r\nexport class OrbitState {\r\n  target\r\n  rx\r\n  rz\r\n  len\r\n  /** Position is derived value and calculated if not provided. */\r\n  position\r\n  constructor({ target, rx, rz, len, position }, clone = false) {\r\n    this.target = target\r\n    this.rx = rx\r\n    this.rz = rz\r\n    this.len = Math.abs(len) // not sure how, but I saw negative len\r\n\r\n    if (clone) {\r\n      this.position = position\r\n    } else {\r\n      if (position) camRotation(this, position, target)\r\n      else this.position = calcCamPos(this)\r\n    }\r\n  }\r\n\r\n  set(position, target, fire = true) {\r\n    if (target) this.target = target\r\n    if (position) this.position = position\r\n    this.updateCalc()\r\n    if (fire) this.fireChange()\r\n  }\r\n\r\n  updateCalc() {\r\n    camRotation(this, this.position, this.target)\r\n  }\r\n\r\n  calcAnim(newState, percent) {\r\n    const a1 = this.target\r\n    const a2 = newState.target\r\n    const target = []\r\n    for (let i = 0; i < 3; i++) target[i] = calcBetween(a1[i], a2[i], percent)\r\n    return {\r\n      rx: calcBetween(this.rx, newState.rx, percent),\r\n      rz: calcBetween(this.rz, newState.rz, percent),\r\n      target,\r\n    }\r\n  }\r\n\r\n  setRotate(rx = 0, rz = 0, target, fire = true) {\r\n    if (target) this.target = target\r\n    this.rx = rx\r\n    this.rz = rz\r\n    this.position = calcCamPos(this)\r\n    if (fire) this.fireChange()\r\n  }\r\n\r\n  rotateBy(rx = 0, rz = 0) {\r\n    this.rx += rx\r\n    if (this.rx < 0) this.rx = 1.0e-10\r\n    if (this.rx > PI) this.rx = PI\r\n    this.rz += rz\r\n    this.position = calcCamPos(this)\r\n    this.fireChange()\r\n  }\r\n\r\n  panBy(dx, dy) {\r\n    const { rx, rz } = this\r\n    let pan = [dx, -dy, 0]\r\n    pan = vec3.transformMat4([], pan, fromXZRotation(rx, rz))\r\n    this.moveBy(pan)\r\n  }\r\n\r\n  moveBy(vec) {\r\n    this.position = vec3.add([], this.position, vec)\r\n    this.target = vec3.add([], this.target, vec)\r\n    this.fireChange()\r\n  }\r\n\r\n  zoomBy(amount) {\r\n    this.len *= 1 + amount\r\n    this.position = calcCamPos(this)\r\n    this.fireChange()\r\n  }\r\n\r\n  clone() {\r\n    return new OrbitState(this, true)\r\n  }\r\n\r\n  toJSON() {\r\n    const { position, ...rest } = this\r\n    return rest\r\n  }\r\n\r\n  fireInput() {\r\n    this.oninput?.(this)\r\n  }\r\n\r\n  fireChange() {\r\n    this.onchange?.(this)\r\n    this.fireInput()\r\n  }\r\n}\r\n", "const { PI } = Math\r\nconst PId2 = PI / 2\r\nexport const TAU = PI * 2\r\n\r\nexport const getCommonRotCombined = name => {\r\n  name = name.toUpperCase()\r\n  let rx = PId2\r\n  let rz = 0\r\n  let rz1\r\n  let rz2\r\n  let topOrBottom\r\n  for (let i = 0; i < name.length; i++) {\r\n    const ch = name[i]\r\n    const rot = getCommonRotByName(ch)\r\n    if (ch === 'T' || ch === 'B') {\r\n      rx = rot[0]\r\n      topOrBottom = ch\r\n    } else {\r\n      if (rz1 === undefined) rz1 = rot[1]\r\n      else rz2 = rot[1]\r\n    }\r\n  }\r\n  if (rz1 !== undefined) {\r\n    if (topOrBottom) rx = topOrBottom === 'T' ? PI / 4 : PI * 0.75\r\n    if (rz2 !== undefined) {\r\n      if (rz2 < rz1) {\r\n        const tmp = rz2\r\n        rz2 = rz1\r\n        rz1 = tmp\r\n      }\r\n      // edge case fix so my fancy math works\r\n      if (rz1 === 0 && rz2 >= PI * 1.5) rz2 = -PId2\r\n      rz = (rz1 + rz2) / 2\r\n    } else {\r\n      rz = rz1\r\n    }\r\n  }\r\n  return [rx, rz]\r\n}\r\n\r\nexport const getCommonRotByName = name => {\r\n  return commonCameras[name] || commonCameras.top\r\n}\r\n\r\nexport const commonCameras = {\r\n  T: [1e-10, 0],\r\n  B: [PI, 0],\r\n  S: [PId2, 0],\r\n  N: [PId2, PI],\r\n  W: [PId2, PI * 1.5],\r\n  E: [PId2, PId2],\r\n}\r\n", "import { TAU } from './commonCamera.js'\r\n\r\nconst { PI } = Math\r\n\r\n/**\r\n * Bring angle into range [0...TAU]\r\n * @param {number} a - (Radians) angle that might need correcting\r\n * @returns {number}\r\n */\r\nexport const normalizeAngle = a => {\r\n  while (a < 0) a += TAU\r\n  while (a > TAU) a -= TAU\r\n  return a\r\n}\r\n\r\n/**\r\n * calculate closer rotation angle a from angle b that is already normalized.\r\n * This is needed to make rotation animations to travel\r\n *\r\n * @param {number} a - (Radians) angle that might need correcting\r\n * @param {number} b - (Radians) already normalized reference angle\r\n * @returns\r\n */\r\nexport const closerAngle = (a, b) => {\r\n  a = normalizeAngle(a)\r\n  if (a - b > PI) return a - TAU\r\n  if (b - a > PI) return a + TAU\r\n  return a\r\n}\r\n", "/**\r\n * This is OrbitControl starting as a simpler and more primitive than others, meant to support multiple webgl engines.\r\n *\r\n * Some resources considered while in making (aside from looking a bit onto other OrbitControl implementations):\r\n * https://webglfundamentals.org/webgl/lessons/webgl-3d-camera.html\r\n * https://elalish.blogspot.com/2022/04/3d-interaction.html\r\n * https://github.com/google/model-viewer/blob/master/packages/model-viewer/src/three-components/SmoothControls.ts\r\n */\r\nimport { OrbitState } from './OrbitState'\r\nimport { getCommonRotCombined } from './commonCamera'\r\nimport { closerAngle } from './normalizeAngle'\r\n\r\nconst { PI } = Math\r\n\r\nexport class OrbitControl extends OrbitState {\r\n  // onchange may be debounced, and when animating called at the end when camera stops at a position\r\n  onchange\r\n  // oninput may be debounced, and when animating called at the end when camera stops at a position\r\n  oninput\r\n  el\r\n  animDuration = 200\r\n\r\n  /**\r\n   * @param {Element|Array<Element>} el\r\n   * @param {Object} options\r\n   */\r\n  constructor(el, { position, target = [0, 0, 0], rx=PI/4, rz=PI/4, len=200, panRatio = 800, rxRatio = 0.01, rzRatio = 0.01, zoomRatio = 0.05 } = {}) {\r\n    super({ position, target, rx, rz, len })\r\n\r\n    this.el = el\r\n    this.rxRatio = rxRatio\r\n    this.rzRatio = rzRatio\r\n\r\n    let isDown = false\r\n    let doubleDown = false\r\n    let isPan = false\r\n    let isZoom = false\r\n    let isMoving = false\r\n    let theButton = 0\r\n    let lx = 0\r\n    let ly = 0\r\n\r\n    // Pinch to zoom gesture\r\n    const pointers = {}\r\n    let lastPinch\r\n\r\n    // Calculate distance and midpoint of two pointers\r\n    const calculatePinch = () => {\r\n      const ids = Object.keys(pointers)\r\n      const [x1, y1] = pointers[ids[0]]\r\n      const [x2, y2] = pointers[ids[1]]\r\n      const dx = x2 - x1\r\n      const dy = y2 - y1\r\n      return {\r\n        distance: Math.sqrt(dx * dx + dy * dy),\r\n        midpoint: [(x1 + x2) / 2, (y1 + y2) / 2],\r\n      }\r\n    }\r\n\r\n    const doListen = el => {\r\n      el.addEventListener('pointerdown', e => {\r\n        theButton = e.button\r\n        lx = e.clientX\r\n        ly = e.clientY\r\n        isDown = true\r\n        pointers[e.pointerId] = [e.clientX, e.clientY]\r\n        if (Object.keys(pointers).length === 2) doubleDown = true\r\n      })\r\n\r\n      el.addEventListener('pointerup', e => {\r\n        isDown = false\r\n        if (isMoving) el.releasePointerCapture(e.pointerId)\r\n        isMoving = false\r\n        delete pointers[e.pointerId]\r\n        if (Object.keys(pointers).length < 2) {\r\n          doubleDown = false\r\n          lastPinch = undefined\r\n        }\r\n      })\r\n\r\n      el.addEventListener('wheel', e => {\r\n        const dir = Math.sign(e.deltaY)\r\n        this.zoomBy(dir * zoomRatio)\r\n      })\r\n\r\n      el.addEventListener('pointermove', e => {\r\n        if (!isDown) return\r\n\r\n        if (!isMoving) {\r\n          // pointer capture inside pointerdown caused clicking to not work\r\n          // it is better to capture pointer only on pointer down + first movement\r\n          el.setPointerCapture(e.pointerId)\r\n          isMoving = true\r\n        }\r\n\r\n        isPan = theButton === 1 || (theButton === 0 && e.shiftKey)\r\n        isZoom = e.ctrlKey\r\n        let dx = lx - e.clientX\r\n        let dy = ly - e.clientY\r\n        pointers[e.pointerId] = [e.clientX, e.clientY]\r\n\r\n        if (isPan) {\r\n          const ratio = this.len / panRatio\r\n          this.panBy(dx * ratio, dy * ratio)\r\n        } else if (isZoom) {\r\n          this.zoomBy((dx + dy) / 200)\r\n        } else if (doubleDown) {\r\n          // Pinch to zoom and pan\r\n          const newPinch = calculatePinch()\r\n          if (lastPinch) {\r\n            // Pan\r\n            const dx = lastPinch.midpoint[0] - newPinch.midpoint[0]\r\n            const dy = lastPinch.midpoint[1] - newPinch.midpoint[1]\r\n            const ratio = this.len / panRatio\r\n            this.panBy(dx * ratio, dy * ratio)\r\n            // Zoom\r\n            const pinchFactor = newPinch.distance / lastPinch.distance\r\n            this.zoomBy(1 - pinchFactor)\r\n          }\r\n          lastPinch = newPinch\r\n        } else {\r\n          this.rotateBy(dy * this.rxRatio, dx * this.rzRatio)\r\n        }\r\n        lx = e.clientX\r\n        ly = e.clientY\r\n      })\r\n    }\r\n\r\n    if (el instanceof Array) el.forEach(doListen)\r\n    else doListen(el)\r\n  }\r\n\r\n  doAnim() {\r\n    let percent = Math.min(1, (Date.now() - this.startTime) / this.animDuration)\r\n    const newState = this.stateStart.calcAnim(this.stateEnd, percent)\r\n    ctrl.setRotate(newState.rx, newState.rz, newState.target, false)\r\n    // update orbit control so it can continue working during or after anim\r\n    if (percent < 1) {\r\n      this.animTimer = requestAnimationFrame(() => this.doAnim())\r\n      this.fireInput()\r\n    } else {\r\n      this.stopAnim()\r\n    }\r\n  }\r\n\r\n  stopAnim() {\r\n    cancelAnimationFrame(this.animTimer)\r\n    this.animTimer = null\r\n    this.startTime = 0\r\n    this.fireChange()\r\n  }\r\n\r\n  animateToCamera({ target, rx, rz }) {\r\n    // normalize angle to avoid crazy spinning if scene was rotated a lot\r\n    // rx does not need this fix as it only operates inside one half of a rotation\r\n    this.rz = closerAngle(this.rz, rz)\r\n\r\n    this.startTime = Date.now()\r\n    this.stateStart = new OrbitState(ctrl, true)\r\n    this.stateEnd = new OrbitState({ target: target || ctrl.target, rx, rz, len: ctrl.len })\r\n    this.animTimer = requestAnimationFrame(() => this.doAnim())\r\n  }\r\n\r\n  animateToCommonCamera(cam) {\r\n    const [rx, rz] = getCommonRotCombined(cam)\r\n    ctrl.animateToCamera({ rx, rz, target: [0, 0, 0] })\r\n  }\r\n\r\n  setCommonCamera(name) {\r\n    this.setRotate(...getCommonRotCombined(name), [0, 0, 0])\r\n  }\r\n}\r\n", "let seq = 1\r\nlet reqMap = new Map()\r\nconst RESPONSE = '__RESPONSE__'\r\nconst TRANSFERABLE = Symbol.for('__transferable__')\r\n\r\nexport const withTransferable = (params, trans) => {\r\n  params[TRANSFERABLE] = trans\r\n  return params\r\n}\r\n\r\nconst fixTransfer = trans => (trans ? trans.map(a => a.buffer || a) : [])\r\n\r\n/**\r\n *\r\n * @param {*} _self reference to self of the main window (self) or reference to a worker\r\n * @param {*} handlers - object where key if method name, and value ih handler\r\n * @returns\r\n */\r\nexport const initMessaging = (_self, handlers, { onJobCount, debug } = {}) => {\r\n  // on service worker, postMessage is on the controller\r\n  const ___self = _self.postMessage ? _self : _self.controller\r\n  const sendResponse = (result, id) => {\r\n    if (debug) console.log(debug, 'sendResponse', id, result)\r\n    let trans = result?.[TRANSFERABLE]\r\n    if (trans) {\r\n      delete result[TRANSFERABLE]\r\n    }\r\n    try {\r\n      ___self.postMessage({ method: RESPONSE, params: result, id }, fixTransfer(trans))\r\n    } catch (error) {\r\n      console.error((debug || '') + 'failed to send ', result, trans)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const sendError = (error, id) => {\r\n    try {\r\n      // serialize stacktrace so it isn't lost in transit\r\n      const stack = error.stack\r\n      if (debug) console.log(debug, 'sendError', id, error)\r\n      ___self.postMessage({ method: RESPONSE, error: { message: error.message, name: error.name, stack }, id })\r\n    } catch (error) {\r\n      console.error((debug || '') + 'failed to send ', error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send a message with no response\r\n   *\r\n   * @param {string} method\r\n   * @param {object} params\r\n   * @param {Array} trans\r\n   */\r\n  const sendNotify = (method, params = [], trans = []) => {\r\n    if (debug) console.log(debug, 'sendNotify', id, method, params)\r\n    ___self.postMessage({ method, params }, fixTransfer(trans))\r\n  }\r\n\r\n  /**\r\n   * Send a message with response expected\r\n   *\r\n   * @param {string} method\r\n   * @param {object} params\r\n   * @param {Array} transferable\r\n   * @param {number?} timeout\r\n   * @returns {Promise} resolves when response is received\r\n   */\r\n  const sendCmd = (method, params = [], transferable = [], timeout) => {\r\n    const id = seq++\r\n    if (debug) console.log(debug, 'sendCmd', id, method, params)\r\n    ___self.postMessage({ method, params, id }, fixTransfer(transferable))\r\n\r\n    const out = new Promise((resolve, reject) => {\r\n      reqMap.set(id, [resolve, reject])\r\n      onJobCount?.(reqMap.size)\r\n      if (timeout) {\r\n        setTimeout(() => {\r\n          reject('timeout')\r\n        }, timeout)\r\n      }\r\n    })\r\n    return out\r\n  }\r\n\r\n  const listener = async e => {\r\n    const { method, params, id, error } = e.data\r\n    if (debug) console.log(debug, 'received', id, method, params, ...(error ? ['error:', error] : []))\r\n    if (id && method === RESPONSE) {\r\n      const p = reqMap.get(id)\r\n\r\n      if (!p) return console.error(`req ${id} not found`, id, e.data, e)\r\n      reqMap.delete(id)\r\n      onJobCount?.(reqMap.size)\r\n\r\n      const [resolve, reject] = p\r\n      if (error) {\r\n        // restore stacktrace\r\n        // if(typeof error === 'string')\r\n        const _error = new Error(error.message)\r\n        _error.stack = error.stack\r\n        _error.name = error.name\r\n        reject(_error)\r\n      } else {\r\n        resolve(params)\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    const fn = handlers[method]\r\n    if (!fn) {\r\n      const msg = 'no handler for type: ' + method\r\n      console.error(msg, e)\r\n      throw new Error(msg)\r\n    }\r\n    try {\r\n      const out = await fn(...params)\r\n      if (id) {\r\n        sendResponse(out, id)\r\n      }\r\n    } catch (error) {\r\n      console.error(`error executing command ${method}`, params, error)\r\n      sendError(error, id)\r\n    }\r\n  }\r\n\r\n  _self.addEventListener?.('message', listener)\r\n\r\n  return {\r\n    sendCmd,\r\n    sendNotify,\r\n    sendResponse,\r\n    sendError,\r\n    listener,\r\n    self: _self,\r\n    getRpcJobCount: () => reqMap.size,\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} _self\r\n * @param {*} handlers\r\n * @returns {object}\r\n */\r\nexport const messageProxy = (_self, handlers, { onJobCount, debug } = {}) => {\r\n  const { sendCmd, sendNotify, getRpcJobCount, listener } = initMessaging(_self, handlers, { onJobCount, debug })\r\n  // creating error is not too expensive in our context as tehre will not be millions\r\n  // methods produced, and info on how the proxy is created an when called is indispensible for debug\r\n  let crated = new Error('proxy')\r\n\r\n  return new Proxy(\r\n    { getRpcJobCount, onmessage: listener },\r\n    {\r\n      get(target, prop, receiver) {\r\n        // then is used to recognize if object is a promise, we do not want\r\n        // to create a them method for postMessage, it would break async functions\r\n        // that return the proxy\r\n        if (prop in target || prop === 'then') return target[prop]\r\n        if (prop.startsWith('on') && (prop.length == 2 || prop[2] == prop[2].toUpperCase())) {\r\n          return (target[prop] = function (...params) {\r\n            sendNotify(prop, params)\r\n          })\r\n        }\r\n        // same as above Error for debugging\r\n        let methodCreated = new Error('methodCreated')\r\n        return (target[prop] = function (...params) {\r\n          try {\r\n            return sendCmd(prop, params)\r\n          } catch (e) {\r\n            console.error(\r\n              'faild to call ' + prop,\r\n              params,\r\n              '\\n',\r\n              e,\r\n              '\\ncreated',\r\n              crated,\r\n              '\\nmethodCreated',\r\n              methodCreated,\r\n            )\r\n          }\r\n        })\r\n      },\r\n    },\r\n  )\r\n}\r\n", "/**\r\n  @typedef MakeGridOptions\r\n  @type {Object}\r\n  @property size {number} grid size\r\n  @property color1 {Array} rgba float (0..1)\r\n  @property color2 {Array} rgba float (0..1)\r\n\r\n\r\n Even though opacity in jscad theme is 1 for color1 and 0.5 for color2, the closest match to the color on the website\r\n is 0.2 and 0.1\r\n Opacity per line-segment is tricky and was added only in threejs 127. so splitting the grid into 2 separate set of lines\r\n allows to have different opacity for grid and subgrid via opacity attribute and keep rgb colors. Also this removes the need to use\r\n color per line, and the two set of lines can simply use color property\r\n  * \r\n  * @param {MakeGridOptions} options \r\n  * @returns \r\n  */\r\nexport const makeGrid = ({ color1 = [0, 0, 0, 0.2], color2 = [0, 0, 0.6, 0.1], size = 200 } = {}) => {\r\n  const lineCount = size + 1\r\n  const mainLineCount = Math.floor(lineCount / 10)\r\n  const lines1 = new Float32Array(mainLineCount * 12 + 12)\r\n  const lines2 = new Float32Array((lineCount - mainLineCount) * 12)\r\n  const half = Math.floor(size / 2)\r\n\r\n  function makeLine4x(lines, offset, i) {\r\n    offset = makeLine(lines, offset, i, i, half, -half)\r\n    offset = makeLine(lines, offset, -i, -i, half, -half)\r\n    offset = makeLine(lines, offset, half, -half, i, i)\r\n    offset = makeLine(lines, offset, half, -half, -i, -i)\r\n    return offset\r\n  }\r\n  function makeLine(lines, offset, x1, x2, y1, y2) {\r\n    lines[offset++] = x1\r\n    lines[offset++] = y1\r\n    lines[offset++] = 0\r\n\r\n    lines[offset++] = x2\r\n    lines[offset++] = y2\r\n    lines[offset++] = 0\r\n    return offset\r\n  }\r\n\r\n  let offset1 = 0\r\n  let offset2 = 0\r\n  offset1 = makeLine(lines1, offset1, 0, 0, half, -half)\r\n  offset1 = makeLine(lines1, offset1, half, -half, 0, 0)\r\n  for (let i = 1; i <= half; i++) {\r\n    if (i % 10 == 0) {\r\n      offset1 = makeLine4x(lines1, offset1, i)\r\n    } else {\r\n      offset2 = makeLine4x(lines2, offset2, i)\r\n    }\r\n  }\r\n  return [\r\n    { vertices: lines1, color: color1, type: 'lines', isTransparent: true },\r\n    { vertices: lines2, color: color2, type: 'lines', isTransparent: true },\r\n  ]\r\n}\r\n", "export const makeAxes = (len = 100, forceColors4) =>{\r\n  const lines = Float32Array.of(\r\n    0,0,0, len,0,0,\r\n    0,0,0, 0,len,0,\r\n    0,0,0, 0,0,len,\r\n  )\r\n  let colors\r\n  if(forceColors4){\r\n    colors = Float32Array.of(\r\n      1,0,0,1, 1,0,0,1,\r\n      0,1,0,1, 0,1,0,1,\r\n      0,0,1,1, 0,0,1,1,\r\n    )\r\n  }else{\r\n    colors = Float32Array.of(\r\n      1,0,0, 1,0,0,\r\n      0,1,0, 0,1,0,\r\n      0,0,1, 0,0,1,\r\n    )\r\n  }\r\n  return {vertices:lines, colors, type:'lines'}\r\n}\r\n", "export const light = {\r\n  name: 'Light',\r\n  color: [0, 0.6, 1, 1],\r\n  bg: [0.95, 0.95, 0.95, 1],\r\n  grid1: [0, 0, 0, 0.2],\r\n  grid2: [0, 0, 1, 0.1],\r\n}\r\n", "const GROUP_SELECTOR = 'DIV[type=\"group\"]'\r\nconst INPUT_SELECTOR = 'INPUT, SELECT'\r\nconst BUTTON_SELECTOR = 'BUTTON'\r\n\r\nexport const forQS = (el, selector, cb) => el.querySelectorAll(selector).forEach(cb)\r\nexport const forEachInput = (el, cb) => forQS(el, INPUT_SELECTOR, cb)\r\nexport const forEachGroup = (el, cb) => forQS(el, GROUP_SELECTOR, cb)\r\nexport const forEachButton = (el, cb) => forQS(el, BUTTON_SELECTOR, cb)\r\n\r\nconst numeric = { number: 1, float: 1, int: 1, range: 1, slider: 1 }\r\n\r\nfunction applyRange(inp) {\r\n  const info = inp.previousElementSibling\r\n  if (info && info.tagName === 'I') {\r\n    info.innerText = inp.value\r\n  }\r\n}\r\n\r\nexport const genParams = ({\r\n  params,\r\n  target,\r\n  callback,\r\n  storedValues = {},\r\n  buttons = ['reset', 'save', 'load', 'edit', 'link'],\r\n}) => {\r\n  let initialValues = {}\r\n  const funcs = {\r\n    group: () => '',\r\n    choice: inputChoice,\r\n    radio: inputRadio,\r\n    // TODO radio similar options as choice\r\n    checkbox: function ({ name, value }) {\r\n      const checkedStr = value === 'checked' || value === true ? 'checked' : ''\r\n      return `<input type=\"checkbox\" name=\"${name}\" ${checkedStr}/>`\r\n    }\r\n  }\r\n\r\n  function inputRadio({ name, type, captions, value, values }) {\r\n    if (!captions) captions = values\r\n\r\n    let ret = '<div type=\"radio\">'\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      const checked = value == values[i] || value == captions[i] ? 'checked' : ''\r\n      ret += `<label><input type=\"radio\" _type=\"${type}\" name=\"${name}\" numeric=\"${\r\n        typeof values[0] == 'number' ? '1' : '0'\r\n      }\" value=\"${values[i]}\" ${checked}/>${captions[i]}</label>`\r\n    }\r\n    return ret + '</div>'\r\n  }\r\n\r\n  function inputChoice({ name, type, captions, value, values }) {\r\n    if (!captions) captions = values\r\n\r\n    let ret = `<select _type=\"${type}\" name=\"${name}\" numeric=\"${typeof values[0] == 'number' ? '1' : '0'}\">`\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      const checked = value == values[i] || value == captions[i] ? 'selected' : ''\r\n      ret += `<option value=\"${values[i]}\" ${checked}>${captions[i]}</option>`\r\n    }\r\n    return ret + '</select>'\r\n  }\r\n\r\n  function inputDefault(def) {\r\n    let { name, type, value, min, max, step, placeholder, live } = def\r\n    if (value === null || value === undefined) value = numeric[type] ? 0 : ''\r\n    let inputType = type\r\n    if (type == 'int' || type == 'float') inputType = 'number'\r\n    if (type == 'range' || type == 'slider') inputType = 'range'\r\n    let str = `<input _type=\"${type}\" type=\"${inputType}\" name=\"${name}\"`\r\n    if (step !== undefined) str += ` step=\"${step}\"`\r\n    if (min !== undefined) str += ` min=\"${min}\"`\r\n    if (max !== undefined) str += ` max=\"${max}\"`\r\n    if (value !== undefined) str += ` value=\"${value}\"`\r\n    str += ` live=\"${live ? 1 : 0}\"`\r\n    if (placeholder !== undefined) str += ` placeholder=\"${placeholder}\"`\r\n    return str + '/>'\r\n  }\r\n\r\n  let html = ''\r\n  let closed = false\r\n  const missing = {}\r\n\r\n  params.forEach(def => {\r\n    let { type, caption, name } = def\r\n\r\n    if (!caption) caption = name\r\n\r\n    // Construct the initial value\r\n    let value = def.initial\r\n    if (def['default'] !== undefined) value = def['default']\r\n    if (type == 'checkbox' && def.checked !== undefined) value = def.checked\r\n    def.value = initialValues[name] = value\r\n    if (storedValues[name] !== undefined) {\r\n      def.value = storedValues[name]\r\n    }\r\n\r\n    if (type == 'group') {\r\n      let ch = caption[0]\r\n      closed = def.value == 'closed'\r\n      if (ch === '>' || ch === '+') {\r\n        caption = caption.substring(1).trim()\r\n        closed = true\r\n      }\r\n    }\r\n    def.closed = closed\r\n\r\n    html += `<div class=\"form-line\" type=\"${def.type}\" closed=\"${closed ? 1 : 0}\" `\r\n    if (type == 'group') html += ` name=\"${name}\"`\r\n    html += `\">`\r\n\r\n    // label\r\n    html += `<label`\r\n    if (type == 'group') html += ` name=\"${name}\"`\r\n    html += `>${caption}</label>`\r\n\r\n    // value\r\n    html += `<i>${def.value}</i>`\r\n\r\n    const inputFunc = funcs[type] || inputDefault\r\n    if (inputFunc) html += inputFunc(def)\r\n    if (!inputFunc) missing[type] = 1\r\n\r\n    html += '</div>\\n'\r\n  })\r\n\r\n  const missingKeys = Object.keys(missing)\r\n  if (missingKeys.length) console.log('missing param impl', missingKeys)\r\n\r\n  function _callback(source = 'change') {\r\n    callback(getParams(target), source)\r\n  }\r\n\r\n  html += '<div class=\"jscad-param-buttons\"><div>'\r\n  buttons.forEach(button => {\r\n    const { id, name } = typeof button === 'string' ? { id: button, name: button } : button\r\n    html += `<button action=\"${id}\"><b>${name}</b></button>`\r\n  })\r\n  html += '</div></div>'\r\n\r\n  target.innerHTML = html\r\n\r\n  forEachInput(target, inp => {\r\n    const type = inp.type\r\n    inp.addEventListener('input', function (evt) {\r\n      applyRange(inp)\r\n      if (inp.getAttribute('live') === '1') _callback('live')\r\n    })\r\n    if (inp.getAttribute('live') !== '1') inp.addEventListener('change', () => _callback('change'))\r\n  })\r\n\r\n  function groupClick(evt) {\r\n    let groupDiv = evt.target\r\n    if (groupDiv.tagName === 'LABEL') groupDiv = groupDiv.parentNode\r\n    const closed = groupDiv.getAttribute('closed') == '1' ? '0' : '1'\r\n    do {\r\n      groupDiv.setAttribute('closed', closed)\r\n      groupDiv = groupDiv.nextElementSibling\r\n    } while (groupDiv && groupDiv.getAttribute('type') != 'group')\r\n    _callback('group')\r\n  }\r\n\r\n  forEachGroup(target, div => {\r\n    div.onclick = groupClick\r\n  })\r\n}\r\n\r\nexport const getParams = target => {\r\n  const params = {}\r\n  if (!target) return params\r\n\r\n  forEachGroup(target, elem => {\r\n    const name = elem.getAttribute('name')\r\n    params[name] = elem.getAttribute('closed') == '1' ? 'closed' : ''\r\n  })\r\n\r\n  forEachInput(target, elem => {\r\n    const name = elem.name\r\n    let value = elem.value\r\n    if (elem.tagName == 'INPUT') {\r\n      if (elem.type == 'checkbox') value = elem?.checked\r\n      if (elem.type == 'file') value = elem.files?.[0]\r\n      if (elem.type == 'range' || elem.type == 'color') applyRange(elem)\r\n    }\r\n\r\n    if (numeric[elem.getAttribute('type')] || elem.getAttribute('numeric') == '1') {\r\n      value = parseFloat(String(value || 0))\r\n    } else if (value && typeof value === 'string' && /^(\\d+|\\d+\\.\\d+)$/.test(value.trim())) {\r\n      value = parseFloat(String(value || 0))\r\n    }\r\n    if (elem.type == 'radio' && !elem.checked) return // skip if not checked radio button\r\n\r\n    params[name] = value\r\n  })\r\n  return params\r\n}\r\n", "export function CommonToThree({\r\n  MeshPhongMaterial,\r\n  LineBasicMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Mesh,\r\n  InstancedMesh,\r\n  Line,\r\n  LineSegments,\r\n  Color,\r\n  Vector3,\r\n}) {\r\n  const flatShading = false\r\n  const materials = {\r\n    mesh: {\r\n      def: new MeshPhongMaterial({ color: 0x0084d1, flatShading }),\r\n      make: params => new MeshPhongMaterial({ flatShading, ...params }),\r\n    },\r\n    line: {\r\n      def: new LineBasicMaterial({ color: 0x0000ff }),\r\n      make: params => new LineBasicMaterial(params),\r\n    },\r\n    lines: null,\r\n  }\r\n  materials.lines = materials.line\r\n  materials.instance = materials.mesh // todo support instances for lines\r\n\r\n  function _CSG2Three(obj, { smooth = false }) {\r\n    const { vertices, indices, normals, color, colors, isTransparent = false, opacity } = obj\r\n    let { transforms } = obj\r\n    const objType = obj.type || 'mesh'\r\n\r\n    const materialDef = materials[objType]\r\n    if (!materialDef) {\r\n      console.error(`material not found for type ${objType}`, obj)\r\n      return\r\n    }\r\n    let material = materialDef.def\r\n    const isInstanced = obj.type === 'instance'\r\n    if ((color || colors) && !isInstanced) {\r\n      const c = color || colors\r\n      const opts = {\r\n        vertexColors: !!colors,\r\n        opacity: c[3] === undefined ? 1 : c[3],\r\n        transparent: (color && c[3] !== 1 && c[3] !== undefined) || isTransparent,\r\n      }\r\n      if (opacity) opts.opacity = opacity\r\n      if (!colors) opts.color = _CSG2Three.makeColor(color)\r\n      material = materialDef.make(opts)\r\n      if (opacity) {\r\n        material.transparent = true\r\n        material.opacity = opacity\r\n      }\r\n    }\r\n\r\n    let geo = new BufferGeometry()\r\n    geo.setAttribute('position', new BufferAttribute(vertices, 3))\r\n    if (indices) geo.setIndex(new BufferAttribute(indices, 1))\r\n    if (normals) geo.setAttribute('normal', new BufferAttribute(normals, 3))\r\n    if(smooth) geo = toCreasedNormals({ Vector3, BufferAttribute }, geo, Math.PI / 10)\r\n    if (colors) geo.setAttribute('color', new BufferAttribute(colors, isTransparent ? 4 : 3))\r\n\r\n    let mesh\r\n    switch (objType) {\r\n      case 'mesh':\r\n        mesh = new Mesh(geo, material)\r\n        break\r\n      case 'instance':\r\n        const { list } = obj\r\n        mesh = new InstancedMesh(geo, materials.mesh.make({ color: 0x0084d1 }), list.length)\r\n        list.forEach((item, i) => {\r\n          copyTransformToArray(item.transforms, mesh.instanceMatrix.array, i * 16)\r\n        })\r\n        transforms = null\r\n        break\r\n      case 'line':\r\n        mesh = new Line(geo, material)\r\n        break\r\n      case 'lines':\r\n        // https://threejs.org/docs/#api/en/materials/LineBasicMaterial\r\n        mesh = new LineSegments(geo, material)\r\n        break\r\n    }\r\n    if (transforms && !isInstanced) mesh.applyMatrix4({ elements: transforms })\r\n    return mesh\r\n  }\r\n\r\n  // shortcut for setMatrixAt for InstancedMesh\r\n  function copyTransformToArray(te, array = [], offset = 0) {\r\n    array[offset] = te[0]\r\n    array[offset + 1] = te[1]\r\n    array[offset + 2] = te[2]\r\n    array[offset + 3] = te[3]\r\n\r\n    array[offset + 4] = te[4]\r\n    array[offset + 5] = te[5]\r\n    array[offset + 6] = te[6]\r\n    array[offset + 7] = te[7]\r\n\r\n    array[offset + 8] = te[8]\r\n    array[offset + 9] = te[9]\r\n    array[offset + 10] = te[10]\r\n    array[offset + 11] = te[11]\r\n\r\n    array[offset + 12] = te[12]\r\n    array[offset + 13] = te[13]\r\n    array[offset + 14] = te[14]\r\n    array[offset + 15] = te[15]\r\n\r\n    return array\r\n  }\r\n\r\n  _CSG2Three.makeColor = c => new Color(c[0], c[1], c[2])\r\n  _CSG2Three.materials = materials\r\n  _CSG2Three.setDefColor = c => {\r\n    materials.mesh.def = new MeshPhongMaterial({ color: _CSG2Three.makeColor(c), flatShading })\r\n  }\r\n\r\n  return _CSG2Three\r\n}\r\n\r\n/** from threejs examples BufferGeometryUtils\r\n * @param {BufferGeometry} geometry\r\n * @param {number} tolerance\r\n * @return {BufferGeometry>}\r\n */\r\n\r\n/**\r\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\r\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\r\n * faces that meet at an angle greater than the crease angle.\r\n *\r\n * @param {BufferGeometry} geometry\r\n * @param {number} [creaseAngle]\r\n * @return {BufferGeometry}\r\n */\r\nfunction toCreasedNormals({ Vector3, BufferAttribute }, geometry, creaseAngle = Math.PI / 3 /* 60 degrees */) {\r\n  const creaseDot = Math.cos(creaseAngle)\r\n  const hashMultiplier = (1 + 1e-10) * 1e2\r\n\r\n  // reusable vectors\r\n  const verts = [new Vector3(), new Vector3(), new Vector3()]\r\n  const tempVec1 = new Vector3()\r\n  const tempVec2 = new Vector3()\r\n  const tempNorm = new Vector3()\r\n  const tempNorm2 = new Vector3()\r\n\r\n  // hashes a vector\r\n  function hashVertex(v) {\r\n    const x = ~~(v.x * hashMultiplier)\r\n    const y = ~~(v.y * hashMultiplier)\r\n    const z = ~~(v.z * hashMultiplier)\r\n    return `${x},${y},${z}`\r\n  }\r\n\r\n  // BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\r\n  // and returns the original geometry\r\n  const resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry\r\n  const posAttr = resultGeometry.attributes.position\r\n  const vertexMap = {}\r\n\r\n  // find all the normals shared by commonly located vertices\r\n  for (let i = 0, l = posAttr.count / 3; i < l; i++) {\r\n    const i3 = 3 * i\r\n    const a = verts[0].fromBufferAttribute(posAttr, i3 + 0)\r\n    const b = verts[1].fromBufferAttribute(posAttr, i3 + 1)\r\n    const c = verts[2].fromBufferAttribute(posAttr, i3 + 2)\r\n\r\n    tempVec1.subVectors(c, b)\r\n    tempVec2.subVectors(a, b)\r\n\r\n    // add the normal to the map for all vertices\r\n    const normal = new Vector3().crossVectors(tempVec1, tempVec2).normalize()\r\n    for (let n = 0; n < 3; n++) {\r\n      const vert = verts[n]\r\n      const hash = hashVertex(vert)\r\n      if (!(hash in vertexMap)) {\r\n        vertexMap[hash] = []\r\n      }\r\n\r\n      vertexMap[hash].push(normal)\r\n    }\r\n  }\r\n\r\n  // average normals from all vertices that share a common location if they are within the\r\n  // provided crease threshold\r\n  const normalArray = new Float32Array(posAttr.count * 3)\r\n  const normAttr = new BufferAttribute(normalArray, 3, false)\r\n  for (let i = 0, l = posAttr.count / 3; i < l; i++) {\r\n    // get the face normal for this vertex\r\n    const i3 = 3 * i\r\n    const a = verts[0].fromBufferAttribute(posAttr, i3 + 0)\r\n    const b = verts[1].fromBufferAttribute(posAttr, i3 + 1)\r\n    const c = verts[2].fromBufferAttribute(posAttr, i3 + 2)\r\n\r\n    tempVec1.subVectors(c, b)\r\n    tempVec2.subVectors(a, b)\r\n\r\n    tempNorm.crossVectors(tempVec1, tempVec2).normalize()\r\n\r\n    // average all normals that meet the threshold and set the normal value\r\n    for (let n = 0; n < 3; n++) {\r\n      const vert = verts[n]\r\n      const hash = hashVertex(vert)\r\n      const otherNormals = vertexMap[hash]\r\n      tempNorm2.set(0, 0, 0)\r\n\r\n      for (let k = 0, lk = otherNormals.length; k < lk; k++) {\r\n        const otherNorm = otherNormals[k]\r\n        if (tempNorm.dot(otherNorm) > creaseDot) {\r\n          tempNorm2.add(otherNorm)\r\n        }\r\n      }\r\n\r\n      tempNorm2.normalize()\r\n      normAttr.setXYZ(i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z)\r\n    }\r\n  }\r\n\r\n  resultGeometry.setAttribute('normal', normAttr)\r\n  return resultGeometry\r\n}\r\n", "import { CommonToThree } from '@jscadui/format-threejs'\r\n\r\nexport function RenderThreejs({\r\n  PerspectiveCamera,\r\n  AmbientLight,\r\n  HemisphereLight,\r\n  WebGLRenderer,\r\n  DirectionalLight,\r\n  Scene,\r\n  Group,\r\n  Vector3,\r\n  Color, // used by both\r\n  // used by CommonToThree\r\n  MeshPhongMaterial,\r\n  LineBasicMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Mesh,\r\n  InstancedMesh,\r\n  Line,\r\n  LineSegments,\r\n}) {\r\n  let _scene\r\n  let _camera\r\n  let controls\r\n  let renderer\r\n  let smooth\r\n  const SHADOW = false\r\n  const shouldRender = Date.now()\r\n  const lastRender = true\r\n  let renderTimer\r\n  let meshColor = new Color(1, 1, 1)\r\n\r\n  const entities = []\r\n  const groups = []\r\n  let canvas\r\n\r\n  const csgConvert = CommonToThree({\r\n    MeshPhongMaterial,\r\n    LineBasicMaterial,\r\n    BufferGeometry,\r\n    BufferAttribute,\r\n    Mesh,\r\n    InstancedMesh,\r\n    Line,\r\n    LineSegments,\r\n    Color,\r\n    Vector3,\r\n  })\r\n\r\n  const startRenderer = ({ canvas, cameraPosition = [180, -180, 220], cameraTarget = [0, 0, 0], bg = [1, 1, 1], lightPosition}) => {\r\n    _camera = new PerspectiveCamera(45, 1, 1, 50000)\r\n    _camera.up.set(0, 0, 1)\r\n    _camera.position.set(...cameraPosition)\r\n    _camera.lookAt(...cameraTarget)\r\n\r\n    window.camera = _camera\r\n    window.updateView = updateView\r\n\r\n    _scene = new Scene()\r\n    lightPosition = null\r\n    const ambientLight = new AmbientLight(0xeeeeee, lightPosition ? 0.2 : 0.5)\r\n    _scene.add(ambientLight)\r\n\r\n    const hemiLight = new HemisphereLight(0xeeeedd, 0x333333, 0.5)\r\n    hemiLight.position.set(0, 0, 2000)\r\n    if(lightPosition) _scene.add(hemiLight)\r\n\r\n    const directionalLight = new DirectionalLight(0xeeeef4, 0.7)\r\n    directionalLight.castShadow = SHADOW\r\n    if (SHADOW) {\r\n      directionalLight.shadow.camera.top = 180\r\n      directionalLight.shadow.camera.bottom = -100\r\n      directionalLight.shadow.camera.left = -120\r\n      directionalLight.shadow.camera.right = 120\r\n    }\r\n    if(lightPosition){\r\n      directionalLight.position.set(...lightPosition)\r\n      _scene.add(directionalLight)\r\n    }else{\r\n      // set pos relative to camera\r\n      directionalLight.position.set(50,0,100)\r\n      _camera.add(directionalLight)\r\n      _scene.add(_camera)\r\n    }\r\n    setBg(bg)\r\n\r\n    renderer = new WebGLRenderer({ antialias: true, preserveDrawingBuffer: true, canvas })\r\n    renderer.setPixelRatio(window.devicePixelRatio)\r\n  }\r\n\r\n  const tmFunc = typeof requestAnimationFrame === 'undefined' ? setTimeout : requestAnimationFrame\r\n\r\n  function updateView(delay = 8) {\r\n    if (renderTimer || !renderer) return\r\n    renderTimer = tmFunc(updateAndRender, delay)\r\n  }\r\n\r\n  function setBg(bg = [1, 1, 1]) {\r\n    _scene.background = new Color(...bg)\r\n    updateView()\r\n  }\r\n\r\n  function setSmooth(v){\r\n    smooth = v\r\n  }\r\n\r\n  function setMeshColor(bg = [1, 1, 1]) {\r\n    meshColor = new Color(...bg)\r\n    csgConvert.setDefColor(bg)\r\n    updateView()\r\n  }\r\n\r\n  function updateAndRender() {\r\n    renderTimer = null\r\n    controls?.update()\r\n\r\n    renderer.render(_scene, _camera)\r\n    renderer.autoClear = false // allow to render multiple scenes one over other if needed\r\n    // https://discourse.threejs.org/t/very-low-fps-when-using-composer-with-2-viewports-and-1-renderer/18586\r\n    // https://webgl2fundamentals.org/webgl/lessons/webgl-multiple-views.html\r\n    // http://jyunming-chen.github.io/tutsplus/tutsplus15.html  - top view plus 3d\r\n    // https://codepen.io/jdrew1303/pen/poyVOyG --- BEST example\r\n    // renderer.render(scene2, camera)\r\n    // https://github.com/fennec-hub/ThreeOrbitControlsGizmo\r\n    renderer.autoClear = true\r\n  }\r\n\r\n  function resize({ width, height }) {\r\n    _camera.aspect = width / height\r\n    _camera.updateProjectionMatrix()\r\n    renderer.setSize(width, height)\r\n    updateView()\r\n  }\r\n\r\n  const handlers = { setScene }\r\n\r\n  function receiveCmd(cmd) {\r\n    const fn = handlers[cmd.action]\r\n    if (!fn) {\r\n      throw new Error('no handler for type: ' + cmd.action)\r\n    }\r\n    fn(cmd)\r\n  }\r\n\r\n  function sendCmd(cmd) {\r\n    receiveCmd(cmd)\r\n  }\r\n\r\n  function setCamera({ position, target }) {\r\n    if (position) _camera.position.set(...position)\r\n    if (target) _camera.lookAt(...target)\r\n    updateView()\r\n  }\r\n\r\n  function getCamera() {\r\n    const target = new Vector3(0, 0, -1)\r\n    target.applyQuaternion(_camera.quaternion)\r\n    return {\r\n      position: _camera.position.toArray(),\r\n      target: target.toArray(),\r\n    }\r\n  }\r\n\r\n  return function JscadThreeViewer(el, { camera: _camera = {}, bg } = {}) {\r\n    canvas = document.createElement('CANVAS')\r\n    el.appendChild(canvas)\r\n\r\n    const destroy = () => {\r\n      el.removeChild(canvas)\r\n    }\r\n\r\n    try {\r\n      startRenderer({ canvas, bg, cameraPosition: _camera.position, cameraTarget: _camera.target })\r\n    } catch (error) {\r\n      destroy()\r\n      throw error\r\n    }\r\n\r\n    const getViewerEnv = () => ({\r\n      forceColors4: false,\r\n      forceIndex: false,\r\n      forceNormals: false,\r\n      useInstances: false,\r\n    })\r\n\r\n    return {\r\n      sendCmd,\r\n      resize,\r\n      destroy,\r\n      getCamera,\r\n      setCamera,\r\n      camera: _camera,\r\n      setBg,\r\n      setMeshColor,\r\n      setScene,\r\n      getViewerEnv,\r\n    }\r\n  }\r\n\r\n  function setScene(scene,{smooth}={}) {\r\n    groups.forEach(group => {\r\n      _scene.remove(group)\r\n    })\r\n    entities.forEach(ent => {\r\n      if (ent.geometry) ent.geometry.dispose()\r\n    })\r\n    entities.length = 0\r\n    scene.items.forEach(item => {\r\n      const group = new Group()\r\n      groups.push(group)\r\n      item.items.forEach(obj => {\r\n        const obj3d = csgConvert(obj, { smooth, scene, meshColor})\r\n        if (obj3d) {\r\n          entities.push(obj3d)\r\n          group.add(obj3d)\r\n        } else {\r\n          console.error('could not convert to obj3d', obj)\r\n        }\r\n      })\r\n      _scene.add(group)\r\n    })\r\n    updateView()\r\n  }\r\n}\r\n", "\r\nexport const observeResize = (el, listener)=>{\r\n  // ResizeObserver is beter than window resize as it can be used on any element\r\n  // this is a short/compact/simple implementation that uses a new ResizeObserver each time.\r\n  // which is fine probably up-to 50 of them. There is a performance hit if too many are created.\r\n  // for an implementation that can handle more take a look at https://github.com/hrgdavor/jsx6/tree/main/libs/dom-observer\r\n  const resizeObserver = new ResizeObserver(entries => {\r\n    listener(entries[0])\r\n  })\r\n  resizeObserver.observe(el)\r\n}\r\n", "import { RenderThreejs } from '@jscadui/render-threejs'\r\n\r\nimport { observeResize } from './observeResize.js'\r\n\r\nexport const initTestThree = (THREE, canvas) => {\r\n  const JscadThreeViewer = RenderThreejs(THREE)\r\n  const viewer = JscadThreeViewer(canvas)\r\n\r\n  observeResize(canvas, evt => viewer.resize(evt.contentRect))\r\n\r\n  return viewer\r\n}\r\n", "import { Gizmo } from '@jscadui/html-gizmo'\r\nimport { OrbitControl, OrbitState, closerAngle, getCommonRotCombined } from '@jscadui/orbit'\r\nimport { messageProxy } from '@jscadui/postmessage'\r\nimport { makeAxes, makeGrid } from '@jscadui/scene'\r\nimport * as themes from '@jscadui/themes'\r\n\r\nimport { genParams } from '../../packages/params-form/src/params'\r\nimport { initTestThree } from './src/testThree'\r\n\r\n/** @typedef {import('@jscadui/worker').JscadWorker} JscadWorker*/\r\n\r\nconst theme = themes.light\r\nlet fileToRun\r\nlet sceneGrid\r\nlet sceneAxes = makeAxes(50)\r\nlet sceneEntities = []\r\nlet viewer\r\n\r\nexport const byId = id => id?.nodeType !== undefined ? id:document.getElementById(id)\r\n\r\nconst gizmo = (window.gizmo = new Gizmo())\r\nbyId('layout').appendChild(gizmo)\r\n\r\nfunction setViewerScene(model) {\r\n  const all = [...model, ...sceneGrid, sceneAxes]\r\n  viewer.setScene({ items: [{ id: 'model', items: all }] })\r\n  sceneEntities = model\r\n}\r\n\r\nfunction setTheme(theme) {\r\n  viewer.setMeshColor(theme.color)\r\n  viewer.setBg(theme.bg)\r\n  sceneGrid = makeGrid({ size: 200, color1: theme.grid1, color2: theme.grid2 })\r\n  setViewerScene(sceneEntities) // set again if theme changes meshes with default color need to change too\r\n}\r\n\r\nconst stored = localStorage.getItem('camera.location')\r\nlet initialCamera = { position: [180, -180, 220] }\r\ntry {\r\n  if (stored) initialCamera = JSON.parse(stored)\r\n} catch (error) {\r\n  console.log(error)\r\n}\r\n\r\nconst elements = [byId('root')]\r\n\r\nconst ctrl = (window.ctrl = new OrbitControl(elements, { ...initialCamera, alwaysRotate: false }))\r\nfunction setViewerCamera({ position, target, rx, rz }) {\r\n  viewer.setCamera({ position, target })\r\n  gizmo.rotateXZ(rx, rz)\r\n}\r\n\r\nconst updateFromCtrl = change => {\r\n  const { position, target, rx, rz, len, ...rest } = change\r\n  setViewerCamera(change)\r\n}\r\n\r\nconst saveCamera = cam => localStorage.setItem('camera.location', JSON.stringify(cam))\r\n\r\nctrl.onchange = change => {\r\n  saveCamera(change)\r\n  stopAnim()\r\n  updateFromCtrl(change)\r\n}\r\n\r\ngizmo.oncam = ({ cam }) => {\r\n  const [rx, rz] = getCommonRotCombined(cam)\r\n  startAnim({ rx, rz, target: [0, 0, 0] })\r\n  saveCamera(stateEnd)\r\n}\r\n\r\nconst startAnim = ({ target, rx, rz }) => {\r\n  startTime = Date.now()\r\n  // rx does not need this fix as it only operates inside one half of a rotation\r\n  ctrl.rz = closerAngle(ctrl.rz, rz)\r\n  stateStart = new OrbitState(ctrl, true)\r\n  stateEnd = new OrbitState({ target: target || ctrl.target, rx, rz, len: ctrl.len })\r\n  animTimer = requestAnimationFrame(doAnim)\r\n}\r\n\r\nconst stopAnim = () => {\r\n  cancelAnimationFrame(animTimer)\r\n  animTimer = null\r\n  startTime = 0\r\n}\r\n\r\nconst doAnim = () => {\r\n  let percent = Math.min(1, (Date.now() - startTime) / animDuration)\r\n  const newState = stateStart.calcAnim(stateEnd, percent)\r\n  ctrl.setRotate(newState.rx, newState.rz, newState.target, false)\r\n  updateFromCtrl(ctrl)\r\n  // update orbit control so it can continue working during or after anim\r\n  if (percent < 1) animTimer = requestAnimationFrame(doAnim)\r\n}\r\n\r\nlet animDuration = 200\r\nlet animTimer, stateStart, stateEnd, startTime\r\n\r\nconst handlers = {\r\n  entities: ({ entities }) => {\r\n    if (!(entities instanceof Array)) entities = [entities]\r\n    setViewerScene(entities)\r\n  },\r\n}\r\n\r\nconst link = document.createElement('a')\r\nlink.style.display = 'none'\r\ndocument.body.appendChild(link)\r\nfunction save(blob, filename) {\r\n  link.href = URL.createObjectURL(blob)\r\n  link.download = filename\r\n  link.click()\r\n}\r\n\r\nfunction exportModel(format) {\r\n  sendCmd('jscadExportData', [{ format }]).then(({ data }) => {\r\n    console.log('save', fileToRun + '.stl', data)\r\n    save(new Blob([data], { type: 'text/plain' }), fileToRun + '.stl')\r\n  })\r\n}\r\nwindow.exportModel = exportModel\r\n\r\nvar worker = new Worker('./build/bundle.worker.js')\r\n/** @type {JscadWorker} */\r\nconst workerApi = globalThis.workerApi = messageProxy(worker, handlers, {  })\r\n\r\nconst paramChangeCallback = params => {\r\n  console.log('params', params)\r\n  workerApi.jscadMain({ params })\r\n}\r\n\r\nexport const jscadScript = file => {\r\n  fileToRun = file.replace(/.*\\//, '').replace(/\\..*/, '')\r\n  workerApi.jscadScript({ url: file }).then(result => {\r\n    console.log('result', result)\r\n    genParams({ target: byId('paramsDiv'), params: result.def || {}, callback: paramChangeCallback })\r\n  })\r\n}\r\n\r\n// ************ init ui     *********************************\r\n\r\nexport const initEngine = async (THREE, elem, workerOptions) => {\r\n  viewer = initTestThree(THREE, byId(elem))\r\n  updateFromCtrl(ctrl)\r\n  setTheme(theme)\r\n\r\n  await workerApi.jscadInit(workerOptions)\r\n}\r\n"],
  "mappings": "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",
  "names": ["names", "makeSide", "name", "parts", "out", "p", "c", "Gizmo", "_names", "#root", "#first", "gizmo_css_default", "first", "e", "cam", "mouseover", "el", "over", "size", "rx", "rz", "ARRAY_TYPE", "degree", "y", "i", "create", "out", "ARRAY_TYPE", "add", "out", "a", "b", "subtract", "transformMat4", "out", "a", "m", "x", "y", "z", "w", "forEach", "vec", "create", "a", "stride", "offset", "count", "fn", "arg", "i", "l", "calcBetween", "a", "b", "p", "fromXZRotation", "rx", "rz", "zs", "zc", "xs", "xc", "calcCamPos", "target", "len", "rz", "rx", "out", "transformMat4", "fromXZRotation", "add", "hypot", "acos", "camRotation", "out", "position", "target", "vec", "subtract", "x", "y", "z", "len", "lenXY", "rz", "rx", "PI", "OrbitState", "target", "rx", "rz", "len", "position", "clone", "camRotation", "calcCamPos", "fire", "newState", "percent", "a1", "a2", "i", "calcBetween", "dx", "dy", "pan", "transformMat4", "fromXZRotation", "vec", "add", "amount", "rest", "PI", "PId2", "TAU", "getCommonRotCombined", "name", "rx", "rz", "rz1", "rz2", "topOrBottom", "i", "ch", "rot", "getCommonRotByName", "tmp", "commonCameras", "PI", "normalizeAngle", "a", "TAU", "closerAngle", "b", "PI", "OrbitControl", "OrbitState", "el", "position", "target", "rx", "rz", "len", "panRatio", "rxRatio", "rzRatio", "zoomRatio", "isDown", "doubleDown", "isPan", "isZoom", "isMoving", "theButton", "lx", "ly", "pointers", "lastPinch", "calculatePinch", "ids", "x1", "y1", "x2", "y2", "dx", "dy", "doListen", "e", "dir", "ratio", "newPinch", "pinchFactor", "percent", "newState", "closerAngle", "cam", "getCommonRotCombined", "name", "seq", "reqMap", "RESPONSE", "TRANSFERABLE", "fixTransfer", "trans", "a", "initMessaging", "_self", "handlers", "onJobCount", "debug", "___self", "sendResponse", "result", "id", "TRANSFERABLE", "RESPONSE", "error", "sendError", "stack", "sendNotify", "method", "params", "sendCmd", "transferable", "timeout", "seq", "resolve", "reject", "reqMap", "listener", "e", "p", "_error", "fn", "msg", "out", "messageProxy", "getRpcJobCount", "crated", "target", "prop", "receiver", "methodCreated", "makeGrid", "color1", "color2", "size", "lineCount", "mainLineCount", "lines1", "lines2", "half", "makeLine4x", "lines", "offset", "i", "makeLine", "x1", "x2", "y1", "y2", "offset1", "offset2", "makeAxes", "len", "forceColors4", "lines", "colors", "light", "GROUP_SELECTOR", "INPUT_SELECTOR", "forQS", "el", "selector", "cb", "forEachInput", "INPUT_SELECTOR", "forEachGroup", "GROUP_SELECTOR", "numeric", "applyRange", "inp", "info", "genParams", "params", "target", "callback", "storedValues", "buttons", "initialValues", "funcs", "inputChoice", "inputRadio", "name", "value", "type", "captions", "values", "ret", "i", "checked", "inputDefault", "def", "min", "max", "step", "placeholder", "live", "inputType", "str", "html", "closed", "missing", "caption", "ch", "inputFunc", "missingKeys", "_callback", "source", "getParams", "button", "id", "forEachInput", "evt", "groupClick", "groupDiv", "forEachGroup", "div", "elem", "CommonToThree", "MeshPhongMaterial", "LineBasicMaterial", "BufferGeometry", "BufferAttribute", "Mesh", "InstancedMesh", "Line", "LineSegments", "Color", "Vector3", "materials", "params", "_CSG2Three", "obj", "smooth", "vertices", "indices", "normals", "color", "colors", "isTransparent", "opacity", "transforms", "objType", "materialDef", "material", "isInstanced", "c", "opts", "geo", "toCreasedNormals", "mesh", "list", "item", "i", "copyTransformToArray", "te", "array", "offset", "geometry", "creaseAngle", "creaseDot", "hashMultiplier", "verts", "tempVec1", "tempVec2", "tempNorm", "tempNorm2", "hashVertex", "v", "x", "y", "z", "resultGeometry", "posAttr", "vertexMap", "l", "i3", "a", "b", "normal", "n", "vert", "hash", "normalArray", "normAttr", "otherNormals", "k", "lk", "otherNorm", "RenderThreejs", "PerspectiveCamera", "AmbientLight", "HemisphereLight", "WebGLRenderer", "DirectionalLight", "Scene", "Group", "Vector3", "Color", "MeshPhongMaterial", "LineBasicMaterial", "BufferGeometry", "BufferAttribute", "Mesh", "InstancedMesh", "Line", "LineSegments", "_scene", "_camera", "controls", "renderer", "smooth", "shouldRender", "lastRender", "renderTimer", "meshColor", "entities", "groups", "canvas", "csgConvert", "CommonToThree", "startRenderer", "cameraPosition", "cameraTarget", "bg", "lightPosition", "updateView", "ambientLight", "hemiLight", "directionalLight", "setBg", "tmFunc", "delay", "updateAndRender", "setSmooth", "v", "setMeshColor", "resize", "width", "height", "handlers", "setScene", "receiveCmd", "cmd", "fn", "sendCmd", "setCamera", "position", "target", "getCamera", "el", "destroy", "error", "scene", "group", "ent", "item", "obj", "obj3d", "observeResize", "el", "listener", "entries", "initTestThree", "THREE", "canvas", "viewer", "RenderThreejs", "observeResize", "evt", "theme", "light", "fileToRun", "sceneGrid", "sceneAxes", "makeAxes", "sceneEntities", "viewer", "byId", "id", "gizmo", "Gizmo", "setViewerScene", "model", "all", "setTheme", "makeGrid", "stored", "initialCamera", "error", "elements", "ctrl", "OrbitControl", "setViewerCamera", "position", "target", "rx", "rz", "updateFromCtrl", "change", "len", "rest", "saveCamera", "cam", "stopAnim", "getCommonRotCombined", "startAnim", "stateEnd", "startTime", "closerAngle", "stateStart", "OrbitState", "animTimer", "doAnim", "percent", "animDuration", "newState", "handlers", "entities", "link", "save", "blob", "filename", "exportModel", "format", "data", "worker", "workerApi", "messageProxy", "paramChangeCallback", "params", "jscadScript", "file", "result", "genParams", "initEngine", "THREE", "elem", "workerOptions", "initTestThree"]
}
